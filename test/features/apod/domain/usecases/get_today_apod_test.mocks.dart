// Mocks generated by Mockito 5.4.0 from annotations
// in astronomy_picture/test/features/apod/domain/usecases/get_today_apod_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:astronomy_picture/core/failure.dart' as _i5;
import 'package:astronomy_picture/features/apod/domain/entities/apod.dart'
    as _i6;
import 'package:astronomy_picture/features/apod/domain/repositories/apod_repository.dart'
    as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApodRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockApodRepository extends _i1.Mock implements _i3.ApodRepository {
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Apod>> getTodayApod() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTodayApod,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.Apod>>.value(
            _FakeEither_0<_i5.Failure, _i6.Apod>(
          this,
          Invocation.method(
            #getTodayApod,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, _i6.Apod>>.value(
                _FakeEither_0<_i5.Failure, _i6.Apod>(
          this,
          Invocation.method(
            #getTodayApod,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Apod>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Apod>> getApodFromDate(
          DateTime? date) =>
      (super.noSuchMethod(
        Invocation.method(
          #getApodFromDate,
          [date],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.Apod>>.value(
            _FakeEither_0<_i5.Failure, _i6.Apod>(
          this,
          Invocation.method(
            #getApodFromDate,
            [date],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, _i6.Apod>>.value(
                _FakeEither_0<_i5.Failure, _i6.Apod>(
          this,
          Invocation.method(
            #getApodFromDate,
            [date],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Apod>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Apod>> getRandomApod() =>
      (super.noSuchMethod(
        Invocation.method(
          #getRandomApod,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.Apod>>.value(
            _FakeEither_0<_i5.Failure, _i6.Apod>(
          this,
          Invocation.method(
            #getRandomApod,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, _i6.Apod>>.value(
                _FakeEither_0<_i5.Failure, _i6.Apod>(
          this,
          Invocation.method(
            #getRandomApod,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Apod>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Apod>>> fetchApod() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchApod,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, List<_i6.Apod>>>.value(
            _FakeEither_0<_i5.Failure, List<_i6.Apod>>(
          this,
          Invocation.method(
            #fetchApod,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.Apod>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.Apod>>(
          this,
          Invocation.method(
            #fetchApod,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Apod>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Apod>>> getApodByDateRange(
    String? startDate,
    String? endDate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getApodByDateRange,
          [
            startDate,
            endDate,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, List<_i6.Apod>>>.value(
            _FakeEither_0<_i5.Failure, List<_i6.Apod>>(
          this,
          Invocation.method(
            #getApodByDateRange,
            [
              startDate,
              endDate,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.Apod>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.Apod>>(
          this,
          Invocation.method(
            #getApodByDateRange,
            [
              startDate,
              endDate,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Apod>>>);
}
